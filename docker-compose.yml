version: '3'
services:
  nginx:
    # build:
      # context: ./nginx
      # dockerfile: Dockerfile
    image: nginx
    container_name: andrewcull-nginx-container
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - nginxconfd:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - nginxhtml:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro

  nginx-gen:
    build:
      context: ./nginx-gen
      dockerfile: Dockerfile
    image: my-nginx-gen
    container_name: andrewcull-nginx-gen-container
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginxconfd:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - nginxhtml:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    command: "-notify-sighup andrewcull-nginx-container -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"
    restart: always

  golang:
    build:
      context: ./golang
      dockerfile: Dockerfile
    container_name: andrewcull-golang-container
    ports:
      - "8080:8080"
  # node:
  #   build:
  #     context: ./node
  #     dockerfile: Dockerfile
  #   env_file: ./node/.dockerenv
  #   image: my-node
  #   container_name: andrewcull-node-container
  #   environment:
  #     - NODE_PATH=/install/node_modules
  #     - MONGO_URL=mongodb://mongo/feedspeeds
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   command: ../install/node_modules/.bin/babel-node server.js --presets es2015,stage-2
  #   depends_on:
  #     - postgres

  react:
    build:
      context: ./react
      dockerfile: Dockerfile
    # env_file: ./react/.dockerenv
    image: my-react
    container_name: andrewcull-react-container
    environment:
      - NODE_PATH=/install/node_modules
      - VIRTUAL_HOST=localhost
      - VIRTUAL_LISTEN_PORT_HTTP=80
      # - LETSENCRYPT_HOST=andrewcull.io,www.andrewcull.io
      # - LETSENCRYPT_EMAIL=richardrpanzer@gmail.com
    command: bash -c "node server.js"

  postgres:
    image: postgres
    container_name: andrewcull-postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

volumes:
  certs:
  vhost:
  postgres:
  nginxhtml:
  nginxconfd:
